/****************************************************************************
 * This formula file or any formula file derived from it cannot be used for
 * commercial purposes or to create hard copy output without the explicit
 * consent of the original author.
 ****************************************************************************/

fractal {

   // Establish the mapping between complex coordinates
   // and display coordinates

   mapping {
      (-1.76590434782608718400,
       -4.52785244704163591933,
       1.74949565217391289629,
       -1.50493060628195762796) => (1115,960)
   }

   formula {

      z      = [0, 0];
      $angle = 0;
 
      $xavg = 0;
      $yavg = 0;
      $mavg = 0;
 
      $xmax = 0;
      $ymax = 0;
      $mmax = 0;
 
      $xtot = 0;
      $ytot = 0;
      $mtot = 0;


      while($count < 20 && ssq(z) < 20)
      {
         z = sinh(current + z);

         value  = sec(z);

         if(inside(z ^ 5, r_and(r_spoly([0, 0], 5, .6, 0), r_not(r_spoly([0, 0], 5, .5, 0)))))
         {
            value = log(value);
         }
 
         $x = real(value);
         $y = imag(value);
         $m = mag(value);
 
         $xavg = ($x + $xavg * $count) / ($count + 1);
         $yavg = ($y + $yavg * $count) / ($count + 1);
         $mavg = ($m + $mavg * $count) / ($count + 1);
 
         $xdev = sqrt(($x - $xavg) * ($x - $xavg));
         $ydev = sqrt(($y - $yavg) * ($y - $yavg));
         $mdev = sqrt(($m - $mavg) * ($m - $mavg));
 
         $xmax = max($xmax, $xdev);
         $ymax = max($ymax, $ydev);
         $mmax = max($mmax, $mdev);
 
         $xtot += $xdev;
         $ytot += $ydev;
         $mtot += $mdev;
      }

      $r = 0; $g = 0; $b = 0;
 
      if($count > 0)
      {
         // Here we divide the average standard deviation by the
         // largest standard deviation
 
         $r = ($xtot/$count) / $xmax;
         $g = ($ytot/$count) / $ymax;
         $b = ($mtot/$count) / $mmax;
 
         $r = get_sin_color($r, 255, 1);
         $g = get_sin_color($g, 255, 1);
         $b = get_sin_color($b, 255, 1);
      }

      set_color($r, $g, $b);
   }
}




















