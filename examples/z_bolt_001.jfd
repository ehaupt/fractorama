/****************************************************************************
 * This formula file or any formula file derived from it cannot be used for
 * commercial purposes or to create hard copy output without the explicit
 * consent of the original author.
 ****************************************************************************/


fractal {

   // Establish the mapping between complex coordinates
   // and display coordinates

   mapping {
      (-3.41000000000000014211,
       -2.31000000000000005329,
       1.32000000000000006217,
       2.25499999999999989342) => (994,960)
   }

   formula {

      center = [1, 1];
      $stop  = 0;
      $angle = 90;
      $n     = 360/$angle;
      z      = [0, 0];

      $xmin = 0; $xmax = 0; $xtot = 0;
      $ymin = 0; $ymax = 0; $ytot = 0;
      $mmin = 0; $mmax = 0; $mtot = 0;

      while($count < 32 && ssq(z) < 4 && $stop == 0)
      {
         z = z^2 + current;

         $x = real(z);
         $y = imag(z);
         $m = mag(z);

         $xtot += $x; $ytot += $y; $mtot += $m;
         $xmin = min($xmin, $x); $ymin = min($ymin, $y); $mmin = min($mmin, $m);
         $xmax = max($xmax, $x); $ymax = max($ymax, $y); $mmax = max($mmax, $m);


         p01 = [0, 0]/10;
         p02 = [1, 3]/10;
         p03 = [0, 3]/10;
         p04 = [1, 6]/10;
         p05 = [0, 6]/10;
         p06 = [2, 10]/10;
         p07 = [1, 7]/10;
         p08 = [2, 7]/10;
         p09 = [1, 4]/10;
         p10 = [2, 4]/10;
         p11 = [0, 0]/10;

         for($i = 0; $stop == 0 && $i < $n; $i ++)
         {
            if(inside(z,
               r_poly(p01, p02, p03, p04, p05, p06, p07, p08, p09, p10, p11)))
            {
               $stop = 1;
            }
            else
            {
              p01 = rotate(p01, center, $angle);
              p02 = rotate(p02, center, $angle);
              p03 = rotate(p03, center, $angle);
              p04 = rotate(p04, center, $angle);
              p05 = rotate(p05, center, $angle);
              p06 = rotate(p06, center, $angle);
              p07 = rotate(p07, center, $angle);
              p08 = rotate(p08, center, $angle);
              p09 = rotate(p09, center, $angle);
              p10 = rotate(p10, center, $angle);
              p11 = rotate(p11, center, $angle);
           }
         }
      }

      $r = 0; $g = 0; $b = 0;

      if($count > 0)
      {
         $r = (($xtot / $count) - $xmin) / ($xmax - $xmin);
         $g = (($ytot / $count) - $ymin) / ($ymax - $ymin);
         $b = (($mtot / $count) - $mmin) / ($mmax - $mmin);

         $r = get_sin_color($r, 255, 1);
         $g = get_sin_color($g, 255, 1);
         $b = get_sin_color($b, 255, 1);
      }

      set_color($r, $g, $b);
   }
}




