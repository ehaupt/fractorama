/****************************************************************************
 * This formula file or any formula file derived from it cannot be used for
 * commercial purposes or to create hard copy output without the explicit
 * consent of the original author.
 ****************************************************************************/

fractal {

   // Establish the mapping between complex coordinates
   // and display coordinates

   mapping {
      (-2.00000000000000000000,
       -2.00000000000000000000,
       2.00000000000000000000,
       2.00000000000000000000) => (960,960)
   }

   formula {
//p = [-0.8333333333, 2];
// p = [-0.6666666667, 2];
// p = [-0.5, 2];
// p = [1.665334537e-016, 2];
// p = [0.1666666667, 2];
// p = [-0.5, 1.833333333];
// p = [-0.3333333333, 1.833333333];
// p = [0.1666666667, 1.833333333];
// p = [-0.3333333333, 1.666666667];
// p = [-0.1666666667, 1.666666667];
// p = [1.665334537e-016, 1.666666667];
// p = [0.1666666667, 1.666666667];
// *p = [-0.3333333333, 1.5];
// p = [-0.1666666667, 1.5];
// p = [1.665334537e-016, 1.5];
// p = [0.1666666667, 1.5];
// p = [-0.5, 1.333333333];
// p = [-0.3333333333, 1.333333333];
// p = [0.1666666667, 1.333333333];
// p = [-0.8333333333, 1.166666667];
// p = [-0.6666666667, 1.166666667];
// p = [-0.5, 1.166666667];
// p = [1.665334537e-016, 1.166666667]
// p = [0.1666666667, 1.166666667];
// p = [-1, 1];
// p = [-0.8333333333, 1];
// p = [0.1666666667, 1];
// p = [-1.5, 0.8333333333];
// p = [-1.333333333, 0.8333333333];
// p = [-1.166666667, 0.8333333333];
// p = [-1, 0.8333333333];
// p = [-0.8333333333, 0.8333333333];
// p = [1.665334537e-016, 0.8333333333];
// p = [0.1666666667, 0.8333333333];
// p = [-1.5, 0.6666666667];
// p = [-0.1666666667, 0.6666666667];
// p = [1.665334537e-016, 0.6666666667];
// p = [-1.666666667, 0.5];
// p = [-1.5, 0.5];
// p = [-0.3333333333, 0.5];
// p = [-0.1666666667, 0.5];
// p = [-1.666666667, 0.3333333333];
// p = [-0.5, 0.3333333333];
// p = [-0.3333333333, 0.3333333333];
// p = [-2, 0.1666666667];
// p = [-1.833333333, 0.1666666667];
 p = [-1.666666667, 0.1666666667];
// p = [-0.5, 0.1666666667];
// p = [-0.6666666667, -1.665334537e-016];
// p = [-0.5, -1.665334537e-016];
// p = [-2, -0.1666666667];
// p = [-1.833333333, -0.1666666667];
// p = [-1.666666667, -0.1666666667];
// p = [-0.5, -0.1666666667];
// p = [-1.666666667, -0.3333333333];
// p = [-0.5, -0.3333333333];
// p = [-0.3333333333, -0.3333333333];
// p = [-1.666666667, -0.5];
// p = [-1.5, -0.5];
// p = [-0.3333333333, -0.5];
// p = [-0.1666666667, -0.5];
// p = [-1.5, -0.6666666667];
// p = [-0.1666666667, -0.6666666667];
// p = [1.665334537e-016, -0.6666666667];
// p = [-1.5, -0.8333333333];
// p = [-1.333333333, -0.8333333333];
// p = [-1.166666667, -0.8333333333];
// p = [-1, -0.8333333333];
// p = [-0.8333333333, -0.8333333333];
// p = [1.665334537e-016, -0.8333333333];
// p = [0.1666666667, -0.8333333333];
// p = [-1, -1];
// p = [-0.8333333333, -1];
// p = [0.1666666667, -1];
// p = [-0.8333333333, -1.166666667];
// p = [-0.6666666667, -1.166666667];
// p = [-0.5, -1.166666667];
// p = [1.665334537e-016, -1.166666667];
// p = [0.1666666667, -1.166666667];
// p = [-0.5, -1.333333333];
// p = [-0.3333333333, -1.333333333];
// p = [0.1666666667, -1.333333333];
// p = [-0.3333333333, -1.5];
// p = [-0.1666666667, -1.5];
// p = [1.665334537e-016, -1.5];
// p = [0.1666666667, -1.5];
// p = [-0.3333333333, -1.666666667];
// p = [-0.1666666667, -1.666666667];
// p = [1.665334537e-016, -1.666666667];
// p = [0.1666666667, -1.666666667];
// p = [-0.5, -1.833333333];
// p = [-0.3333333333, -1.833333333];
// p = [0.1666666667, -1.833333333];
// p = [-0.8333333333, -2];
// p = [-0.6666666667, -2];
// p = [-0.5, -2];
// p = [1.665334537e-016, -2];
// p = [0.1666666667, -2];


      z = current;

      $v1total = 0; $v2total = 0; $v3total = 0;
      $v1min   = 0; $v2min   = 0; $v3min   = 0;
      $v1max   = 0; $v2max   = 0; $v3max   = 0;

      while($count < 20 && ssq(z) < 30)
      {
         // The formula used here should match the one
         // used in 'NOTE 1' in seek.jfd using p instead of current

         z = cosh(z) ^ 2 + p;

         value = log(z);

         $v1 = mag(value);
         $v2 = mag(value^2);
         $v3 = mag(value^3);

         $v1total += $v1; $v2total += $v2; $v3total += $v3;

         $v1min = min($v1, $v1min);
         $v2min = min($v2, $v2min);
         $v3min = min($v3, $v3min);

         $v1max = max($v1, $v1max);
         $v2max = max($v2, $v2max);
         $v3max = max($v3, $v3max);
      }

      $r = 0; $g = 0; $b = 0;

      if($count > 0)
      {
         $r = (($v1total / $count) - $v1min) / ($v1max - $v1min);
         $g = (($v2total / $count) - $v2min) / ($v2max - $v2min);
         $b = (($v3total / $count) - $v3min) / ($v3max - $v3min);

         $r = get_sin_color($r, 255, 1); 
         $g = get_sin_color($g, 255, 1);
         $b = get_sin_color($b, 255, 1);
      }

      set_color($r, $g, $b);
   }
}










