fractal {

   // Establish the mapping between complex coordinates
   // and display coordinates

   mapping {
      (-2.39505170633483244202,
       -3.45628449851415364691,
       -1.90023047923765164846,
       -2.82842244142346643798) => (357*16, 457*16)
   }

   formula
   {
      z = exp(current);

      $v1total = 0; $v2total = 0; $v3total = 0;
      $v1min   = 0; $v2min   = 0; $v3min   = 0;
      $v1max   = 0; $v2max   = 0; $v3max   = 0;

      $n      = 0;
      $gValue = 1;

      while($count < 12)
      {
         f_z  = tan(log(z));
         fp_z = -(csc(log(z)) ^ 2 / z);

         zold = z;
         z    = z - fp_z / f_z;

         v = log(z);

         $v1 = real(v);
         $v2 = imag(v);
         $v3 = mag(v);

         $v1total += $v1;
         $v2total += $v2;
         $v3total += $v3;

         $v1min = ($count == 0 ? $v1 : min($v1, $v1min));
         $v2min = ($count == 0 ? $v2 : min($v2, $v2min));
         $v3min = ($count == 0 ? $v3 : min($v3, $v3min));

         $v1max = ($count == 0 ? $v1 : max($v1, $v1max));
         $v2max = ($count == 0 ? $v2 : max($v2, $v2max));
         $v3max = ($count == 0 ? $v3 : max($v3, $v3max));

         if(ssq(z - zold) < 1e-20) { break; }

         if($n == 0)
         {
            v  = z;
            $a = rad(v);
            $r = 1 - cos(4 * $a);
            p1 = [$r * cos($a), $r * sin($a)];
            p2 = conj(p1);
            $t = .05;

            if(($d = ssq(p1 - z)) < $t ||
               ($d = ssq(p2 - z)) < $t)
            {
               $gValue = .8 * $t / $d;
               $n++;
            }
         }
         elseif($n++ == 10) { break; }
      }


      $r = 0; $g = 0; $b = 0;

      if($count > 0)
      {
         $v1 = (($v1total / $count) - $v1min) / ($v1max - $v1min);
         $v2 = (($v2total / $count) - $v2min) / ($v2max - $v2min);
         $v3 = (($v3total / $count) - $v3min) / ($v3max - $v3min);

         $r = get_sin_color($v3, 255, 1.5);
         $g = get_sin_color($v3, 255, 1.0);
         $b = get_sin_color($v3, 255, .3);

         $r = gamma($r, $gValue);
         $g = gamma($g, $gValue);
         $b = gamma($b, $gValue);
      }
  
      set_color($r, $g, $b);
   }
}
